<?php

/**
 * С помощью цикла for заполните массив числами от 1 до 100
 * То есть у вас должен получится массив [1, 2, 3... 100]
 */
$a = [];
$n = 100;
for ($i = 1; $i <= $n; ++$i) {
    $a[] = $i;
}
print_r($a);

/**
 * Заполните массив числами от 1 до 10 с помощью цикла
 */
$a = [];
$n = 10;
for ($i = 1; $i <= $n; ++$i) {
    $a[] = $i;
}
print_r($a);

/**
 * Заполните массив числами от 10 до 1 с помощью цикла
 */
$a = [];
$n = 10;
for ($i = $n; $i > 0; --$i) {
    $a[] = $i;
}
print_r($a);

/**
 * Выведите с помощью цикла столбец четных чисел от 1 до 100
 */
$n = 100;
for ($i = 1; $i <= 100; ++$i) {
    if (($i % 2) == 0) {
        echo $i . PHP_EOL;
    }
}

/**
 * Выведите с помощью цикла столбец нечетных чисел от 1 до 100
 */
$n = 100;
for ($i = 1; $i <= $n; ++$i) {
    if (($i % 2) !== 0) {
        echo $i . PHP_EOL;
    }
}

/**
 * Найдите с помощью цикла сумму чисел от 1 до 100
 */
$n = 100;
$sum = 0;
for ($i = 1; $i <= $n; ++$i) {
    $sum += $i;
}
echo $sum;

/**
 * Найдите с помощью цикла сумму квадратов чисел от 1 до 15
 */
$n = 15;
$sum = 0;
for ($i = 1; $i <= $n; ++$i) {
    $sum += $i * $i;
}
echo $sum;

/**
 * Заполните массив 10-ю иксами с помощью цикла
 */
$n = 10;
$a = [];
for ($i = 1; $i <= $n; ++$i) {
    $a[] = 'x';
}
print_r($a);

/**
 * Заполните массив 10-ю случайными числами от 1 до 10 с помощью цикла
 */
$n = 10;
$a = [];
for ($i = 1; $i <= $n; ++$i) {
    $a[] = mt_rand(1, 10);
}
print_r($a);

/**
 * С помощью цикла создайте строку из 6-ти символов,
 * состоящую из случайных чисел от 1 до 9
 */
$n = 6;
$string = '';
for ($i = 1; $i <= $n; ++$i) {
    $string .= mt_rand(1, 9);
}
echo $string;

/**
 * Дан массив с числами $a 1, 2, 3, 4, 6, 9, 11
 * С помощью цикла найдите сумму элементов этого массива
 */
$a = [1, 2, 3, 4, 6, 9, 11];
$sum = 0;
$n = count($a);
for ($i = 0; $i < $n; ++$i) {
    $sum += $a[$i];
}
echo $sum;

/**
 * Дан массив с числами $a 1, 2, 3, 4, 6, 9, 11
 * С помощью цикла найдите сумму квадратов элементов этого массива
 */
$a = [1, 2, 3, 4, 6, 9, 11];
$sum = 0;
$n = count($a);
for ($i = 0; $i < $n; ++$i) {
    $sum += $a[$i] * $a[$i];
}
echo $sum;

/**
 * Дан массив с числами $a 1, 2, 3, 4, 6, 9, 11
 * С помощью цикла найдите корень из суммы квадратов элементов этого массива
 * Результат округлите в меньшую сторону до целых
 */
$a = [1, 2, 3, 4, 6, 9, 11];
$sum = 0;
$n = count($a);
for ($i = 0; $i < $n; ++$i) {
    $sum += $a[$i] * $a[$i];
}
echo floor(sqrt($sum));

/**
 * Дан массив с числами -1, 1, 2, 12, 3, -2, 4, 0, 6, 9, 11
 * Найдите сумму тех элементов массива, которые больше 0 и меньше 10
 */
$a = [-1, 1, 2, 12, 3, -2, 4, 0, 6, 9, 11];
$sum = 0;
$n = count($a);
for ($i = 0; $i < $n; ++$i) {
    if ($a[$i] > 0 && $a[$i] < 10) {
        $sum += $a[$i];
    }
}
echo $sum;

/**
 * С помощью цикла сформируйте строку '1223334444...'
 * и так далее до заданного числа
 */
$string = '';
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $i; $j > 0; --$j) {
        $string .= $i;
    }
}
echo $string;
echo PHP_EOL;
$string = '';
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        $string .= $i;
    }
}
echo $string;

/**
 * Напишите программу, чтобы проверить,
 * содержит ли данная строка все уникальные символы.
 *
 * Пример вывода: Исходная строка: https
 */
$string = 'https';
$strSplit = mb_str_split($string);
$isDuplicates = false;
$n = count($strSplit);
for ($i = 0; $i < $n; $i++) {
    for ($j = $n - 1; $j > $i; $j--) {
        if ($strSplit[$i] === $strSplit[$j])
            $isDuplicates = true;
    }
}
var_dump($isDuplicates);

/**
 * Вывод строки в обратном порядке
 * 'PHP это распространённый язык программирования'
 */
$newString = '';
$string = 'PHP это распространённый язык программирования';
$n = mb_strlen($string);
for ($i = ($n - 1); $i > 0; $i--) {
    $newString .= mb_substr($string, $i, 1);
}
echo $newString;

/**
 * Дан многомерный массив (см. его под задачей)
 * С помощью цикла выведите строки в формате 'имя, зарплата'
 */
$a = [
    0 => ['name' => 'Коля', 'salary' => 300],
    1 => ['name' => 'Вася', 'salary' => 400],
    2 => ['name' => 'Петя', 'salary' => 500],
];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    echo "Имя: {$a[$i]['name']}, зарплата: {$a[$i]['salary']}" . PHP_EOL;
}

/**
 * Заполните двумерный массив случайными числами от 1 до 10
 * В каждом подмассиве должно быть по 10 элементов
 * Должно быть 10 подмассивов
 */
$a = [];
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        $a[$i][$j] = mt_rand(1, 10);
    }
}
print_r($a);

/**
 * Дано число, например 30
 * У этого числа есть делители - числа, на которое оно делится без остатка
 * Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30
 * Задача: сделайте массив делителей нашего числа
 * Число может быть любым, не обязательно, 30
 */
$n = 30;
$a = [];
for ($i = 1; $i <= $n; $i++) {
    if (($n % $i) === 0) {
        $a[] = $i;
    }
}
print_r($a);

/**
 * Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 * Узнайте, сколько первых элементов массива нужно сложить,
 * чтобы сумма получилась больше 10, выведите эти элементы
 */
$x = 10;
$sum = 0;
$b = [];
$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    $sum += $a[$i];
    $b[] = $a[$i];
    if ($sum > $x) {
        break;
    }
}
echo count($b) . PHP_EOL;
print_r($b);

/**
 * Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 * надо найти сумму нечетных чисел до числа 6
 */
$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
$x = 6;
$sum = 0;
$n = count($a);
for ($i = 0; $i < $n && $a[$i] != $x; $i++) {
    if (($a[$i] % 2) !== 0) {
        $sum += $a[$i];
    }
}
echo $sum;

/**
 * Напишите цикл, который принимает массив с разными повторяющимися числами,
 * а возвращает массив тех же чисел, но уже без повторов.
 * Пример входных параметров 1, 3, 2, 2, 3, 0
 * Ожидается на выходе 1, 3, 2, 0
 */
$a = [1, 3, 2, 2, 3, 0];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    for ($j = ($i + 1); $j < $n; $j++) {
        if (isset($a[$j]) && ($a[$i] == $a[$j])) {
            unset($a[$j]);
        }
    }
    $a = array_values($a);
}
print_r($a);

/**
 * Напишите цикл, который принимает массив с разными числами,
 * а возвращает массив с тем же порядком, но всеми нулями перемещенными в конец
 * Пример входных параметров 3, 0, 0, 1, 2, 0, 5, 4, 3, 3
 * Ожидается на выходе 3, 1, 2, 5, 4, 3, 3, 0, 0, 0
 */
$b = [];
$a = [3, 0, 0, 1, 2, 0, 5, 4, 3, 3];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    if ($a[$i] == 0) {
        $b[] = $a[$i];
        unset($a[$i]);
    }
}
$a = array_merge($a, $b);
print_r($a);

/**
 * Дан массив с числами 2,1,4,3,5,7,6,9,8,11,10,15,29,25,52,13,51
 * Запишите в новый массив только те числа,
 * в которых есть цифра 5
 */
$x = 5;
$a = [2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 15, 29, 25, 52, 13, 51];
$n = count($a);
$b = [];
for ($i = 0; $i < $n; $i++) {
    if (preg_match("#{$x}#", (string)$a[$i])) {
        $b[] = $a[$i];
    }
}
print_r($b);

$b = [];
for ($i = 0; $i < $n; $i++) {
    if (strpos(strval($a[$i]), strval($x)) !== false) {
        $b[] = $a[$i];
    }
}
print_r($b);

/**
 * Даны два массива [1, 2, 3] и ['a', 'b', 'c']
 * создайте один массив [1, 'a', 2, 'b', 3, 'c']
 */
$a = [1, 2, 3];
$b = ['a', 'b', 'c'];
$c = [];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    $c[] = $a[$i];
    $c[] = $b[$i];
}
print_r($c);

/**
 * Создайте массив ['a', 'b', 'c', 'd']
 * и выведите на экран строку 'a+b, c+d'
 */
$a = ['a', 'b', 'c', 'd'];
$n = count($a);
$str = '';
$n = count($a) / 2;
for ($i = 0; $i <= $n; $i += 2) {
	$str .= $a[$i] . '+' . $a[$i + 1];
	$str .= ' ';
}
echo $str . PHP_EOL;

/**
 * Даны два массива [1, 2, 3] и ['a', 'b', 'c'],
 * объедените их таким образом, чтобы на выходе был
 * одни массив в таком виде [1, 'a', 2, 'b', 3, 'c']
 */
$a = [1, 2, 3];
$b = ['a', 'b', 'c'];
$result = [];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
	$result[] = $a[$i];
	$result[] = $b[$i];
}
echo implode(', ', $result);

print_r($result);

/**
 * Дан массив [1 => 'one 1', 2 => 'one 2', 3 => 'one 3']
 * нужно поменять местами one 1, one 2 элемент массива,
 * чтобы получить one 2, one 1
 */
$data = [
	[1 => 'one 1', 2 => 'one 2', 3 => 'one 3'],
	[1 => 'two 1', 2 => 'two 2', 3 => 'two 3'],
	[1 => 'three 1', 2 => 'three 2', 3 => 'three 3'],
	[1 => 'four 1', 2 => 'four 2', 3 => 'four 3'],
];
$n = count($data);
for ($i = 0; $i < $n; $i++) {
	[$data[$i][1], $data[$i][2]] = [$data[$i][2], $data[$i][1]];
}
print_r($data);

/**
 * Напишите скрипт, который проверяет, является ли данное число простым
 * (простое число - это то, которое делится только на 1 и на само себя)
 */
$n = 31;
$a = [];
$isFlag = true;
for ($i = 2; $i < $n; $i++) {
    for ($j = 2; $j < $i; $j++) {
        if (($i % $j) == 0) {
            $isFlag = false;
        }
    }

    if ($isFlag) {
        $a[] = $i;
    } else {
        $isFlag = true;
    }
}
print_r($a);

/**
 * Даны две строки с одинаковым количеством символов,
 * найте какое количество символов не совпадает
 * 'Привит мир!', 'Привет Вова'
 */
$firstString = 'Привит мир!';
$secondString = 'Привет Вова';
$splitFirst = mb_str_split($firstString);
$splitSecond = mb_str_split($secondString);
$n = count($splitFirst);
$count = 0;
$symbol = [];
for ($i = 0; $i < $n; $i++) {
    if ($splitFirst[$i] !== $splitSecond[$i]) {
        $count++;
        $symbol[] = $splitFirst[$i] . ' ' . $splitSecond[$i];
    }
}
echo $count;
print_r($symbol);

/**
 * Дан массив целых чисел
 * Все элементы, оканчивающиеся цифрой 4, уменьшить вдвое
 * 14.5, 24, 1, 2, 31, 41, 1, 44, 3, 54, 3, 104, 55
 */
//вариант 1
$x = 4;
$a = [14.5, 24, 1, 2, 31, 41, 1, 44, 3, 54, 3, 104, 55];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    $lastSymbol = substr((string)$a[$i], -1);
    if ($lastSymbol == $x) {
        $a[$i] /= 2;
    }
}
print_r($a);
//вариант 2
$x = 4;
$a = [14.5, 24, 1, 2, 31, 41, 1, 44, 3, 54, 3, 104, 55];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    if (abs($a[$i] % 10) == $x) {
        $a[$i] /= 2;
    }
}
print_r($a);

/**
 * Найти число пар соседних элементов массива, являющихся четными числами
 * 2, 2, 1, 3, 2, 4, 3, 3
 */
$count = 0;
$a = [2, 2, 1, 3, 2, 4, 3, 3];
$n = count($a) - 1;
for ($i = 0; $i < $n; $i++) {
    if ((($a[$i] % 2) == 0) && (($a[$i + 1] % 2) == 0)) {
        $count++;
    }
}
echo $count;

/**
 * Написать программу которая выводит цифры от 1 до 10,
 * а потом, начиная с другой строчки, от 10 до 1.
 * 1 2 3 4 5 6 7 8 9 10
 * 10 9 8 7 6 5 4 3 2 1
 */
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    echo $i . ' ';
}
echo PHP_EOL;
for ($j = ($i - 1); $j > 0; $j--) {
    echo $j . ' ';
}

/**
 * Пользователь вводит число от 1 до 999.
 * Программа выводит все числа между 0
 * и введенным числом или выдает сообщение об ошибке.
 */
echo 'Введите число от 1 до 999:';
$n = readline();
if (1 > $n || $n > 999) {
    echo 'Число должно быть от 1 до 999';
} else {
    for ($i = 0; $i < $n; $i++) {
        echo $i . ' ';
    }
}

/**
 * Написать программу которая выводит квадраты чисел от 1 до 10,
 * потом, с другой строчки, квадраты чисел от 10 до 1.
 */
$n = 10;
for ($i = 1; $i <= 10; $i++) {
    echo ($i * $i) . ' ';
}
echo PHP_EOL;
for ($j = ($i - 1); $j > 0; $j--) {
    echo ($j * $j) . ' ';
}

/**
 * Написать программу которая выводит массивы a и b попарно
 */
$a = [1, 2, 3, 4, 5, 6, 7, 8];
$b = [8, 7, 6, 5, 4, 3, 2, 1];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    echo $a[$i] . ' ' . $b[$i] . PHP_EOL;
}

/**
 * Написать программу которая создает массив a[10]
 * и наполняет его случайными числами от 1 до 100.
 * После этого программа выводит этот массив.
 */
$a = [];
$n = 10;
for ($i = 0; $i < $n; $i++) {
    $a[$i] = mt_rand(1, 100);
    echo $a[$i] . ' ';
}

/**
 * Вывести все числа, меньшие 10000,
 * у которых есть хотя бы одна цифра 3
 */
$n = 10000;
$a = [];
for ($i = 1; $i <= $n; $i++) {
    if (($i % 10) === 3) {
        echo $i . PHP_EOL;
    }
}
echo PHP_EOL;
echo count($a);

/**
 * Заполнить массив A длины 10 нулями и единицами,
 * при этом данные значения чередуются, начиная с нуля.
 */
$n = 10;
$a = [];
for ($i = 0; $i < $n; $i++) {
    $a[] = (($i % 2) === 0) ? 0 : 1;
}
print_r($a);

/**
 * Определите, есть ли в массиве повторяющиеся элементы.
 */
$a = [1, 2, 3, 1, 4, 5, 4, 6, 7, 8, 3, 9, 1];
$n = count($a);
$duplicates = [];
for ($i = 0; $i < $n; $i++) {
    for ($j = ($n - 1); $j > $i; $j--) {
        if ($a[$i] === $a[$j]) {
            $duplicates[$i] = $a[$i] . '=' . $a[$j];
        }
    }
}
print_r($duplicates);

/**
 * Удалите в массиве повторы значений.
 * Например, для массива 1 2 4 4 2 5 результатом будет 1 2 4 5
 */
$a = [1, 2, 4, 4, 2, 5];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    for ($j = ($n - 1); $j > $i; $j--) {
        if ($a[$i] == $a[$j]) {
            unset($a[$j]);
        }
    }
}
print_r($a);

/**
 * Пользователь вводит четыре числа.
 * Найдите наибольшее четное число среди них.
 * Если оно не существует, выведите фразу "not found"
 */
echo 'Введите число:';
$a[] = readline();
echo 'Введите число:';
$a[] = readline();
echo 'Введите число:';
$a[] = readline();
echo 'Введите число:';
$a[] = readline();
$n = count($a);
$result = null;
for ($i = 0; $i < $n; $i++) {
    for ($j = 0; $j < $n; $j++) {
        if (($a[$i] % 2) == 0 && ($a[$i] > $result)) {
            $result = $a[$i];
        }
    }
}
echo $result ?? 'not found';

/**
 * Выведите на экран следующую пирамидку
 * x
 * xx
 * xxx
 * xxxx
 * xxxxx
 * xxxxxx
 * xxxxxxx
 * xxxxxxxx
 * xxxxxxxxx
 */
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo 'x';
    }
    echo PHP_EOL;
}

for ($i = 0; $i < $n; $i++) {
    echo str_repeat('x', $i) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * xx
 * xxxx
 * xxxxxx
 * xxxxxxxx
 * xxxxxxxxxx
 */
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    if (($i % 2) === 0) {
        for ($j = 1; $j <= $i; $j++) {
            echo 'x';
        }
        echo PHP_EOL;
    }
}

for ($i = 1; $i <= $n; $i++) {
    if (($i % 2) === 0) {
        echo str_repeat('x', $i) . PHP_EOL;
    }
}

/**
 * Выведите на экран следующую пирамидку
 * 111
 * 222
 * 333
 * 444
 * 555
 * 666
 * 777
 * 888
 * 999
 */
$n = 9;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= 3; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = 1; $i <= $n; $i++) {
    echo str_repeat((string)$i, 3) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * 1
 * 22
 * 333
 * 4444
 * 55555
 * 666666
 * 7777777
 * 88888888
 * 999999999
 */
$n = 9;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = 1; $i <= $n; $i++) {
    echo str_repeat((string)$i, $i) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * 1
 * 333
 * 55555
 * 7777777
 * 999999999
 */
$n = 9;
for ($i = 1; $i <= $n; $i++) {
    if ($i === 1 || $i === 3 || $i === 5 || $i === 7 || $i === 9) {
        for ($j = 1; $j <= $i; $j++) {
            echo $i;
        }
        echo PHP_EOL;
    }
}

$numbers = [1, 3, 5, 7, 9];
for ($i = 1; $i <= $n; $i++) {
    if (in_array($i, $numbers)) {
        for ($j = 1; $j <= $i; $j++) {
            echo $i;
        }
        echo PHP_EOL;
    }
}

$numbers = [1, 3, 5, 7, 9];
for ($i = 1; $i <= $n; $i++) {
    if (in_array($i, $numbers)) {
        echo str_repeat((string)$i, $i) . PHP_EOL;
    }
}

/**
 * Выведите на экран следующую пирамидку
 * xxxxx
 * xxxx
 * xxx
 * xx
 * x
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo 'x';
    }
    echo PHP_EOL;
}

for ($i = $n; $i >= 1; $i--) {
    echo str_repeat((string)$i, $i) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * xxxxxxxxxx
 * xxxxxxxx
 * xxxxxx
 * xxxx
 * xx
 */
$n = 10;
for ($i = $n; $i >= 1; $i--) {
    if (($i % 2) === 0) {
        for ($j = 1; $j <= $i; $j++) {
            echo 'x';
        }
        echo PHP_EOL;
    }
}

for ($i = $n; $i >= 1; $i--) {
    if (($i % 2) === 0) {
        echo str_repeat('x', $i) . PHP_EOL;
    }
}

/**
 * Выведите на экран следующую пирамидку
 * 999999999
 * 88888888
 * 7777777
 * 666666
 * 55555
 * 4444
 * 333
 * 22
 * 1
 */
$n = 9;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = $n; $i >= 1; $i--) {
    echo str_repeat((string)$i, $i) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * 12345
 * 12345
 * 12345
 * 12345
 * 12345
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = 1; $i <= $n; $i++) {
    echo str_repeat((string)$i, $n) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * 11111
 * 22222
 * 33333
 * 44444
 * 55555
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = 1; $i <= $n; $i++) {
    echo str_repeat((string)$i, $n) . PHP_EOL;
}

/**
 * Выведите на экран следующую пирамидку
 * 55555
 * 44444
 * 33333
 * 22222
 * 11111
 */
$n = 5;
for ($i = $n; $i > 0; $i--) {
    for ($j = 1; $j <= $n; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

for ($i = $n; $i > 0; $i--) {
    echo str_repeat((string)$i, $n) . PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 12345
 * 12345
 * 12345
 * 12345
 * 12345
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 54321
 * 54321
 * 54321
 * 54321
 * 54321
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j > 0; $j--) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1  2  3  4  5
 * 6  7  8  9  10
 * 11 12 13 14 15
 * 16 17 18 19 20
 * 21 22 23 24 25
 */
$n = 25;
$count = 1;
for ($i = 1; $i <= $n; $i++) {
    $indent = ($i < 10) ? '  ' : ' ';
    echo $i . $indent;
    if ($count == 5) {
        echo PHP_EOL;
        $count = 0;
    }
    $count++;
}

/**
 * Вывести циклом цифры
 * 1  3  5  7  9
 * 11 13 15 17 19
 * 21 23 25 27 29
 * 31 33 35 37 39
 * 41 43 45 47 49
 */
$n = 5;
$x = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        $indent = ($x < 10) ? '  ' : ' ';
        echo $x . $indent;
        $x += 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1  3  5  7  9
 * 11 13 15 17 19
 * 21 23 25 27 29
 * 31 33 35 37 39
 * 41 43 45 47 49
 */
$n = 5;
$x = 2;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        $indent = ($x < 10) ? '  ' : ' ';
        echo $x . $indent;
        $x += 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 111213
 * 212223
 * 313233
 * 414243
 * 515253
 */
$n1 = 5;
$n2 = 3;
for ($i = 1; $i <= $n1; $i++) {
    for ($j = 1; $j <= $n2; $j++) {
        echo $i . $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 10 15 20 25
 * 4 9 14 19 24
 * 3 8 13 18 23
 * 2 7 12 17 22
 * 1 6 11 16 21
 */
$n = 5;
$x = 0;
for ($i = 1; $i <= $n; $i++) {
    $x = $n - $i + 1;
    for ($j = 1; $j <= $n; $j++) {
        echo $x . ' ';
        $x = $x + $n;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 6 15 16 25
 * 4 7 14 17 24
 * 3 8 13 18 23
 * 2 9 12 19 22
 * 1 10 11 20 21
 */
$n = 5;
$x = 0;
$y = 0;
for ($i = 1; $i <= $n; $i++) {
    $x = $i;
    $y = $n - $i + 1;
    for ($j = 1; $j <= $n; $j++) {
        if (($j % 2) === 0) {
            echo $x . ' ';
        } else {
            echo $y . ' ';
        }
        $x = $x + $n;
        $y = $y + $n;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 2 3 4 5
 * 2 3 4 5 6
 * 3 4 5 6 7
 * 4 5 6 7 8
 * 5 6 7 8 9
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo $i + $j - 1 . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 01010
 * 10101
 * 01010
 * 10101
 * 01010
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo (($i + $j) % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 10101
 * 01010
 * 10101
 * 01010
 * 10101
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 0; $j < $n; $j++) {
        echo (($i + $j) % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 10101
 * 00000
 * 10101
 * 00000
 * 10101
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo (($i * $j) % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 01010
 * 00000
 * 01010
 * 00000
 * 01010
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 0; $j < $n; $j++) {
        echo (($i * $j) % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 00000
 * 11111
 * 00000
 * 11111
 * 00000
 */
$n = 5;
for ($i = 0; $i < $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo ($i % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 11111
 * 00000
 * 11111
 * 00000
 * 11111
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo ($i % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 010101
 * 010101
 * 010101
 * 010101
 * 010101
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 0; $j <= $n; $j++) {
        echo ($j % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 10101
 * 10101
 * 10101
 * 10101
 * 10101
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        echo ($j % 2);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом буквы
 * AAAAA
 * BBBBB
 * CCCCC
 * DDDDD
 * EEEEE
 */
$a = 'A';
$e = 'E';
for ($i = $a; $i <= $e; $i++) {
    for ($j = $a; $j <= $e; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом буквы
 * ABCDE
 * ABCDE
 * ABCDE
 * ABCDE
 * ABCDE
 */
$a = 'A';
$e = 'E';
for ($i = $a; $i <= $e; $i++) {
    for ($j = $a; $j <= $e; $j++) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 1 1 1 1 1
 * 1 1 1 1 1 1
 * 7 7 7 7 7 7
 * 7 7 7 7 7 7
 * 8 8 8 8 8 8
 * 8 8 8 8 8 8
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i <= 2) {
            echo 1 . ' ';
        } elseif ($i === 3 || $i === 4) {
            echo 7 .' ';
        } else {
            echo 8 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 1 2 2 3 3
 * 1 1 2 2 3 3
 * 1 1 2 2 3 3
 * 1 1 2 2 3 3
 * 1 1 2 2 3 3
 * 1 1 2 2 3 3
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($j === 1 || $j === 2) {
            echo 1 . ' ';
        } elseif ($j === 3 || $j === 4) {
            echo 2 . ' ';
        } elseif ($j === 5 || $j === 6) {
            echo 3 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 3 3 3 3 3
 * 2 1 3 3 3 3
 * 2 2 1 3 3 3
 * 2 2 2 1 3 3
 * 2 2 2 2 1 3
 * 2 2 2 2 2 1
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i == $j) {
            echo 1 . ' ';
        } elseif ($i > $j) {
            echo 2 . ' ';
        } elseif ($i < $j) {
            echo 3 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 2 2 2 2 2
 * 3 1 2 2 2 2
 * 3 3 1 2 2 2
 * 3 3 3 1 2 2
 * 3 3 3 3 1 2
 * 3 3 3 3 3 1
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i == $j) {
            echo 1 . ' ';
        } elseif ($i < $j) {
            echo 2 . ' ';
        } elseif ($i > $j) {
            echo 3 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 2 2 2 2 2 2
 * 0 2 2 2 2 2
 * 0 0 2 2 2 2
 * 0 0 0 2 2 2
 * 0 0 0 0 2 2
 * 0 0 0 0 0 2
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i > $j) {
            echo 0 . ' ';
        } else {
            echo 2 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 2 0 0 0 0 0
 * 0 2 0 0 0 0
 * 0 0 2 0 0 0
 * 0 0 0 2 0 0
 * 0 0 0 0 2 0
 * 0 0 0 0 0 2
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i == $j) {
            echo 2 . ' ';
        } else {
            echo 0 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0 0 0 0 0 2
 * 0 0 0 0 2 0
 * 0 0 0 2 0 0
 * 0 0 2 0 0 0
 * 0 2 0 0 0 0
 * 2 0 0 0 0 0
 */
$n = 6;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i == (7 - $j)) {
            echo 2 . ' ';
        } else {
            echo 0 . ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 22
 * 333
 * 4444
 * 55555
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $i;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 44
 * 333
 * 2222
 * 11111
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = $n; $j >= $i; $j--) {
        echo $i;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 54
 * 543
 * 5432
 * 54321
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = $n; $j >= $i; $j--) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 45
 * 345
 * 2345
 * 12345
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = $i; $j <= $n; $j++) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 45
 * 345
 * 2345
 * 12345
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $j * 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 45
 * 345
 * 2345
 * 12345
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $j * 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 23
 * 456
 * 78910
 */
$n = 4;
$x = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $x;
        $x++;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 35
 * 579
 * 791113
 */
$n = 5;
for ($i = 1; $i < $n; $i++) {
    $t = $i - 1;
    for ($j = 1; $j <= $i; $j++) {
        echo $t + $i;
        $t += 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 32
 * 654
 * 10987
 */
$n = 4;
$k = 0;
for ($i = 1; $i <= $n; $i++) {
    $k += $i;
    for ($j = $k; $j > $k - $i; $j--) {
        echo $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 3 5
 * 7 9 11
 * 13 15 17 19
 * 21 23 25 27 29
 */
$n = 5;
$x = 1;
for ($i = $n; $i >= 1; $i--) {
    for ($j = $n; $j >= $i; $j--) {
        echo $x . ' ';
        $x += 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 2
 * 4 6
 * 8 10 12
 * 14 16 18 20
 * 22 24 26 28 30
 */
$n = 5;
$x = 2;
for ($i = $n; $i >= 1; $i--) {
    for ($j = $n; $j >= $i; $j--) {
        echo $x . ' ';
        $x += 2;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 2 4
 * 3 6 9
 * 4 8 12 16
 * 5 10 15 20 25
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $i * $j . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 6 2
 * 10 7 3
 * 13 11 8 4
 * 15 14 12 9 5
 */
$n = 5;
$x = 1;
for ($i = $n; $i >= 1; $i--) {
    $y = $i;
    $t = $x;
    for ($j = $n; $j >= $i; $j--) {
        echo $t . ' ';
        $t = $t - $y;
        $y++;
    }
    $x = $x + $i;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 9 2
 * 10 8 3
 * 14 11 7 4
 * 15 13 12 6 5
 */
$n = 5;
$x = 1;
$y = $n;
for ($i = $n; $i >= 1; $i--) {
    $t1 = $x;
    $t2 = $y;
    $r1 = $i;
    $r2 = $i + 1;
    for ($j = $n; $j >= $i; $j--) {
        if (($i + $j) % 2 == 0) {
            echo $t1 . ' ';
        } else {
            echo $t2 . ' ';
        }
        $t1 = $t1 - $r1++;
        $t2 = $t2 - $r2++;
    }
    $y = $y + $i - 1;
    $x = $x + $i;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 6 4
 * 12 7 3
 * 13 11 8 2
 * 15 14 10 9 1
 */
$n = 5;
$x = 1;
$y = $n;
for ($i = $n; $i >= 1; $i--) {
    $t1 = $x;
    $t2 = $y;
    $r1 = $i;
    $r2 = $i + 1;
    for ($j = $n; $j >= $i; $j--) {
        if (($i + $j) % 2 == 1) {
            echo $t1 . ' ';
        } else {
            echo $t2 . ' ';
        }
        $t1 = $t1 - $r1++;
        $t2 = $t2 - $r2++;
    }
    $y = $y + $i - 1;
    $x = $x + $i;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 15
 * 14 13
 * 12 11 10
 * 9 8 7 6
 * 5 4 3 2 1
 */
$n = 5;
$x = ($n * ($n + 1) / 2);
for ($i = $n; $i >= 1; $i--) {
    for ($j = $n; $j >= $i; $j--) {
        echo $x-- . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5
 * 9 4
 * 12 8 3
 * 14 11 7 2
 * 15 13 10 6 1
 */
$n = 5;
$x = $n;
for ($i = $n; $i >= 1; $i--) {
    $t = $x;
    $y = $i + 1;
    for ($j = $n; $j >= $i; $j--) {
        echo $t . ' ';
        $t = $t - $y;
        $y++;
    }
    $x = $x + $i - 1;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 1 1
 * 1 2 1
 * 1 3 3 1
 * 1 4 6 4 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    $px = 1;
    for ($j = 1; $j <= $i; $j++) {
        echo $px . ' ';
        $px = $px * ($i - $j) / $j;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 1 2
 * 2 3 4
 * 4 5 6 7
 * 7 8 9 10 11
 */
$n = 5;
$x = 1;
for ($i = 0; $i < $n; $i++) {
    for ($j = 0; $j <= $i; $j++) {
        echo ($x - $i) . ' ';
        $x++;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 4 9
 * 16 25 36
 * 49 64 81 100
 */
$n = 4;
$x = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo ($x * $x) . ' ';
        $x++;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 1 2
 * 3 5 8
 * 13 21 34 55
 * 89 144 233 377 610
 */
$n = 5;
$n1 = 0;
$n2 = 1;
$r = $n1 + $n2;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo $r . ' ';
        $r = $n1 + $n2;
        $n1 = $n2;
        $n2 = $r;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0
 * 0 1
 * 0 1 1
 * 0 1 1 2
 * 0 1 1 2 3
 */
$n = 5;
$firstNum = $secondNum = $result = 0;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        $firstNum = $secondNum;
        $secondNum = $result;
        echo $result . ' ';
        $result = $firstNum + $secondNum;
    }
    $firstNum = 0;
    $secondNum = 1;
    $result = 0;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 0 0
 * 1 1 1
 * 0 0 0 0
 * 1 1 1 1 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo ($i % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0
 * 1 1
 * 0 0 0
 * 1 1 1 1
 * 0 0 0 0 0
 */
$n = 5;
for ($i = 0; $i < $n; $i++) {
    for ($j = 0; $j <= $i; $j++) {
        echo ($i % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 1 0
 * 1 0 1
 * 1 0 1 0
 * 1 0 1 0 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo ($j % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0
 * 0 1
 * 0 1 0
 * 0 1 0 1
 * 0 1 0 1 0
 */
$n = 5;
for ($i = 0; $i < $n; $i++) {
    for ($j = 0; $j <= $i; $j++) {
        echo ($j % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0
 * 1 0
 * 0 1 0
 * 1 0 1 0
 * 0 1 0 1 0
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo (($i + $j) % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 0 1
 * 1 0 1
 * 0 1 0 1
 * 1 0 1 0 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 0; $j < $i; $j++) {
        echo (($i + $j) % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 1 1 1 1
 * 2 2 2 2
 * 3 3 3
 * 4 4
 * 5
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= $i; $j--) {
        echo $i . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 2 3 4 5
 * 1 2 3 4
 * 1 2 3
 * 1 2
 * 1
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo $j . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 5 5 5 5
 * 4 4 4 4
 * 3 3 3
 * 2 2
 * 1
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo $i . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 4 3 2 1
 * 5 4 3 2
 * 5 4 3
 * 5 4
 * 5
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= $i; $j--) {
        echo $j . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 4 3 2 1
 * 6 5 4 3
 * 7 6 5
 * 8 7
 * 9
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n - $i + 1; $j++) {
        echo ($n - $j + $i) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 6 7 8 9
 * 4 5 6 7
 * 3 4 5
 * 2 3
 * 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $n - $i + 1; $j++) {
        echo ($n - $i + $j) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 2 3 4 5
 * 6 7 8 9
 * 10 11 12
 * 13 14
 * 15
 */
$n = 5;
$k = 1;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo $k++ . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 15 14 13 12 11
 * 10 9 8 7
 * 6 5 4
 * 3 2
 * 1
 */
$n = 5;
$x = ($n * ($n + 1) / 2);
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= $i; $j--) {
        echo $x-- . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 17 18 19 20
 * 14 15 16
 * 12 13
 * 11
 */
$n = 4;
$d1 = 1;
$d2 = ($n * $n) + 1;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo $d2 . ' ';
        $d2++;
    }
    $d2--;
    $d2 = $d2 - (($i - 1) * 2);
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 5 9 12 14 15
 * 4 8 11 13
 * 3 7 10
 * 2 6
 * 1
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    $k = $i;
    for ($j = 1; $j <= $i; $j++) {
        echo $k . ' ';
        $k = $k + ($n - $j);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 1 1 1 1
 * 0 0 0 0
 * 1 1 1
 * 0 0
 * 1
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= $i; $j--) {
        echo ($i % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0 0 0 0 0
 * 1 1 1 1
 * 0 0 0
 * 1 1
 * 0
 */
$n = 5;
for ($i = 0; $i < $n; $i++) {
    for ($j = $n; $j > $i; $j--) {
        echo ($i % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 0 1 0 1
 * 1 0 1 0
 * 1 0 1
 * 1 0
 * 1
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo ($j % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0 1 0 1 0
 * 0 1 0 1
 * 0 1 0
 * 0 1
 * 0
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 0; $j < $i; $j++) {
        echo ($j % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 0 1 0 1 0
 * 1 0 1 0
 * 0 1 0
 * 1 0
 * 0
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $i; $j++) {
        echo (($i + $j) % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1 0 1 0 1
 * 0 1 0 1
 * 1 0 1
 * 0 1
 * 1
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 0; $j < $i; $j++) {
        echo (($i + $j) % 2) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *     1
 *    2 2
 *   3 3 3
 *  4 4 4 4
 * 5 5 5 5 5
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = ($n - 1); $j >= $i; $j--) {
        echo ' ';
    }
    for ($k = 1; $k <= $i; $k++) {
        echo $i . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *     1
 *    22
 *   333
 *  4444
 * 55555
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = ($n - 1); $j >= $i; $j--) {
        echo ' ';
    }
    for ($k = 1; $k <= $i; $k++) {
        echo $i;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *     1
 *    12
 *   123
 *  1234
 * 12345
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= $i; $j--) {
        echo ' ';
    }
    for ($k = 1; $k <= $i; $k++) {
        echo $k;
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *     5
 *    44
 *   333
 *  2222
 * 11111
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i <= $j) {
            echo $i;
        } else {
            echo ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *     5
 *    45
 *   345
 *  2345
 * 12345
 */
$n = 5;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i <= $j) {
            echo $j;
        } else {
            echo ' ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *              2
 *            4 6
 *        8 10 12
 *    14 16 18 20
 * 22 24 26 28 30
 */
$n = 5;
$x = 2;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i <= $j) {
            echo $x . ' ';
            $x += 2;
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *              1
 *            3 5
 *         7 9 11
 *    13 15 17 19
 * 21 23 25 27 29
 */
$n = 5;
$x = 1;
for ($i = $n; $i >= 1; $i--) {
    for ($j = 1; $j <= $n; $j++) {
        if ($i <= $j) {
            echo $x . ' ';
            $x += 2;
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *         1
 *        24
 *       369
 *    481216
 * 510152025
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = ($n - 1); $j >= $i; $j--) {
        echo '   ';
    }
    for ($k = 1; $k <= $i; $k++) {
        echo ($i * $k);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *             1
 *           2 4
 *         3 6 9
 *     4 8 12 16
 * 5 10 15 20 25
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = ($n - 1); $j >= $i; $j--) {
        echo '   ';
    }
    for ($k = 1; $k <= $i; $k++) {
        echo ($i * $k) . ' ';
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *            1
 *          4 9
 *     16 25 36
 * 49 64 81 100
 */
$n = 4;
$x = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= 1; $j--) {
        if ($i >= $j) {
            echo ($x * $x);
            $x++;
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *              1
 *            2 3
 *          4 5 6
 *       7 8 9 10
 * 11 12 13 14 15
 */
$n = 5;
$k = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= 1; $j--) {
        if ($i >= $j) {
            echo $k++ . ' ';
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *             15
 *         14  13
 *     12  11  10
 *    9  8  7   6
 * 5  4  3  2   1
 */
$n = 5;
$k = ($n * ($n + 1)) / 2;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= 1; $j--) {
        $indent = ($i < 10) ? '  ' : '';
        if ($i >= $j) {
            echo $k--  . $indent;
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *          15
 *       14 13
 *    12 11 10
 *    9  8 7 6
 * 5  4  3 2 1
 */
$n = 5;
$k = ($n * ($n + 1)) / 2;
for ($i = 1; $i <= $n; $i++) {
    $indent = ($i < 10) ? ' ' : '   ';
    for ($j = $n; $j >= 1; $j--) {
        if ($i >= $j) {
            echo $indent . $k--;
        } else {
            echo '  ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *              1
 *            2 3
 *          4 5 6
 *       7 8 9 10
 * 11 12 13 14 15
 */
$n = 5;
$k = 1;
for ($i = 1; $i <= $n; $i++) {
    for ($j = $n; $j >= 1; $j--) {
        if ($i >= $j) {
            echo ' ' . $k++;
        } else {
            echo '   ';
        }
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 *            1
 *          6 2
 *       10 7 3
 *    13 11 8 4
 * 15 14 12 9 5
 */
$n = 5;
$x = 1;
for ($i = $n; $i >= 1; $i--) {
    $y = $i;
    $t = $x;
    for ($j = 1; $j < $i; $j++) {
        echo '   ';
    }
    for ($k = $n; $k >= $i; $k--) {
        echo ' ' . $t;
        $t -= $y;
        $y++;
    }
    $x += $i;
    echo PHP_EOL;
}

/**
 * Вывести циклом цифры
 * 1
 * 2 11
 * 3 12 20
 * 4 13 21 28
 * 5 14 22 29 35
 * 6 15 23 30 36 41
 * 7 16 24 31 37 42 46
 * 8 17 25 32 38 43 47 50
 * 9 18 26 33 39 44 48 51 53
 * 10 19 27 34 40 45 49 52 54 55
 */
$n = 10;
for ($i = 1; $i <= $n; $i++) {
    $k = $i;
    for ($j = 1; $j <= $i; $j++) {
        echo $k . ' ';
        $k = $k + ($n - $j);
    }
    echo PHP_EOL;
}

/**
 * Вывести циклом фигуру
 * ******
 * ******
 * ******
 */
$n1 = 3;
$n2 = 6;
for ($i = 1; $i <= $n1; $i++) {
    for ($j = 1; $j <= $n2; $j++) {
        echo '*';
    }
    echo PHP_EOL;
}

for ($i = 1; $i <= $n1; $i++) {
    echo str_repeat('*', $n2) . PHP_EOL;
}

/**
 * Вывести циклом фигуру
 *  *
 *  **
 *  ***
 *  ****
 *  *****
 */
$n = 5;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        echo '*';
    }
    echo PHP_EOL;
}

/**
 * Найти количество положительных и сумму нечетных элементов массива А[15]
 */
$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];
$posNumbers = $oddNumbers = 0;
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    if ($a[$i] > 0) {
        $posNumbers += 1;
    } elseif (($a[$i] < 0)) {
        $oddNumbers += $a[$i];
    }
}
echo 'Количество положительных элементов: ' . $posNumbers . PHP_EOL;
echo 'Сумма нечетных элементов: ' . $oddNumbers;

/**
 * Найти сумму положительных и количество нечетных элементов массива А[10]
 */
$a = [1, 2, 3, 4, 5, 6, 7, -8, -9, -10];
$sum = $oddCount = 0;
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    if ($a[$i] < 0) {
        $oddCount += 1;
    } elseif (($a[$i] > 0)) {
        $sum += $a[$i];
    }
}
echo 'Сумма положительных элементов: ' . $sum . PHP_EOL;
echo 'Количество нечетных элементов: ' . $oddCount;

/**
 * Вычислить среднее арифметическое элементов массива A[15], удовлетворяющих условию 5 ≤ T[i] ≤ 15
 */
$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
$n = count($a);
$sum = 0;
$average = 0;
for ($i = 0; $i < $n; $i++) {
    if (5 <= $a[$i] && $a[$i] <= 15) {
        $sum += $a[$i];
        $average += 1;
    }
}
echo ($sum / $average);

/**
 * Найти количество элементов массива A[16], кратных 4 и не больше заданного числа x
 */
$x = 10;
$count = 0;
$a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];
$n = count($a);
for ($i = 0; $i < $n; $i++) {
    if ($a[$i] % 4 == 0 && $a[$i] < $x) {
        $count += 1;
    }
}
echo $count;

/**
 * Найти сумму элементов одномерного массива размером 5.
 * Разделить каждый элемент исходного массива на полученное значение.
 * Результат сохранить в том же массиве. Напечатать в одной строке
 */
$a = [1, 2, 3, 4, 5];
$n = count($a);
$sum = array_sum($a);
for ($i = 0; $i < $n; $i++) {
    $result = $a[$i] / $sum;
    $a[$i] = round($result, 2);
}
echo implode(', ', $a);

/**
 * Найти среднее значение элементов заданного массива размером 6.
 * Преобразовать исходный массив, вычитая из каждого элемента среднее значение
 */
$a = [1.0, 2.0, 3.0, 4.0, 5.0, 6.0];
$n = count($a);
$average = array_sum($a) / $n;
for ($i = 0; $i < $n; $i++) {
    $a[$i] -= $average;
}
echo implode(', ', $a);

/**
 * Вычислить длину вектора Х размером 7
 */
$a = [1, 2, 3, 4, 5, 6, 7];
$n = count($a);
$vector = 0;
for ($i = 0; $i < $n; $i++) {
    $vector += $a[$i] * $a[$i];
}
echo sqrt($vector);

/**
 * Выведите (через пробел) все четные числа от a до b (включительно).
 */
echo 'Введите чилсло а: ';
$a = (int)trim(fgets(STDIN));
echo 'Введите число b: ';
$b = (int)trim(fgets(STDIN));

for ($i = $a; $i < $b; $i++) {
    if ($i % 2 === 0) {
        echo $i . ' ';
    }
}

/**
 * Выведите все числа на отрезке от a до b, дающие остаток c при делении на d.
 * Вводятся 4 числа: a, b, c и d.
 */
echo 'Введите чилсло а: ';
$a = (int)trim(fgets(STDIN));
echo 'Введите число b: ';
$b = (int)trim(fgets(STDIN));
echo 'Введите число c: ';
$c = (int)trim(fgets(STDIN));
echo 'Введите чилсло d: ';
$d = (int)trim(fgets(STDIN));

for ($i = $a; $i <= $b; $i++) {
    if ($i % $d === $c) {
        echo $i . ' ';
    }
}

/**
 * Выведите все числа на отрезке от a до b, являющиеся полными квадратами.
 * Вводятся 4 числа: a, b, c и d.
 */
echo 'Введите чилсло а: ';
$a = (int)trim(fgets(STDIN));
echo 'Введите число b: ';
$b = (int)trim(fgets(STDIN));
$sqrtA = ceil(sqrt($a + 0.0));
$sqrtB = sqrt($b);

for ($i = $sqrtA; $i <= $sqrtB; $i++) {
    echo $i * $i . ' ';
}

/**
 * Выведите все натуральные делители числа x в порядке возрастания (включая 1 и само число).
 */
echo 'Введите чилсло x: ';
$x = (int)trim(fgets(STDIN));

for ($i = 1; $i <= $x; $i++) {
    if ($x % $i === 0) {
        echo $i . ' ';
    }
}

/**
 * Подсчитайте количество натуральных делителей числа x (включая 1 и само число; x <= 30000).
 */
echo 'Введите чилсло x: ';
$x = (int)trim(fgets(STDIN));
$k = 0;
for ($i = 1; $i <= $x; $i++) {
    if ($x % $i === 0) {
        $k++;
    }
}
echo $k;

/**
 * Вычислите сумму данных 100 натуральных чисел. Вводятся 100 чисел, сумму которых необходимо посчитать.
 */
echo 'Введите чилсло x: ';
$x = (int)trim(fgets(STDIN));
$sum = 0;

for ($i = 1; $i <= $x; $i++) {
    $sum += $i;
}
echo $sum;

/**
 * Вычислите сумму данных N натуральных чисел. Вводится число N, а затем N чисел, сумму которых необходимо вычислить.
 */
echo 'Введите чилсло n: ';
$n = (int)trim(fgets(STDIN));
echo 'Введите чилсло x: ';
$x = (int)trim(fgets(STDIN));
$sum = 0;

for ($i = 1; $i <= $n; $i++) {
    $sum += $x;
}
echo $sum;
